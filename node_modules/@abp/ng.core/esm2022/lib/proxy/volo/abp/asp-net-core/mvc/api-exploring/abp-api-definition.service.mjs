import { RestService } from '../../../../../../services/rest.service';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../../services/rest.service";
class AbpApiDefinitionService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'abp';
        this.getByModel = (model) => this.restService.request({
            method: 'GET',
            url: '/api/abp/api-definition',
            params: { includeTypes: model.includeTypes },
        }, { apiName: this.apiName });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.6", ngImport: i0, type: AbpApiDefinitionService, deps: [{ token: i1.RestService }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.6", ngImport: i0, type: AbpApiDefinitionService, providedIn: 'root' }); }
}
export { AbpApiDefinitionService };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.6", ngImport: i0, type: AbpApiDefinitionService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RestService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJwLWFwaS1kZWZpbml0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvcHJveHkvdm9sby9hYnAvYXNwLW5ldC1jb3JlL212Yy9hcGktZXhwbG9yaW5nL2FicC1hcGktZGVmaW5pdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN0RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFNM0MsTUFHYSx1QkFBdUI7SUFhbEMsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFaNUMsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVoQixlQUFVLEdBQUcsQ0FBQyxLQUErQyxFQUFFLEVBQUUsQ0FDL0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQ3RCO1lBQ0UsTUFBTSxFQUFFLEtBQUs7WUFDYixHQUFHLEVBQUUseUJBQXlCO1lBQzlCLE1BQU0sRUFBRSxFQUFFLFlBQVksRUFBRSxLQUFLLENBQUMsWUFBWSxFQUFFO1NBQzdDLEVBQ0QsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUMxQixDQUFDO0lBRTJDLENBQUM7OEdBYnJDLHVCQUF1QjtrSEFBdkIsdUJBQXVCLGNBRnRCLE1BQU07O1NBRVAsdUJBQXVCOzJGQUF2Qix1QkFBdUI7a0JBSG5DLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzdFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9zZXJ2aWNlcy9yZXN0LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB0eXBlIHtcclxuICBBcHBsaWNhdGlvbkFwaURlc2NyaXB0aW9uTW9kZWwsXHJcbiAgQXBwbGljYXRpb25BcGlEZXNjcmlwdGlvbk1vZGVsUmVxdWVzdER0byxcclxufSBmcm9tICcuLi8uLi8uLi9odHRwL21vZGVsaW5nL21vZGVscyc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQWJwQXBpRGVmaW5pdGlvblNlcnZpY2Uge1xyXG4gIGFwaU5hbWUgPSAnYWJwJztcclxuXHJcbiAgZ2V0QnlNb2RlbCA9IChtb2RlbDogQXBwbGljYXRpb25BcGlEZXNjcmlwdGlvbk1vZGVsUmVxdWVzdER0bykgPT5cclxuICAgIHRoaXMucmVzdFNlcnZpY2UucmVxdWVzdDxhbnksIEFwcGxpY2F0aW9uQXBpRGVzY3JpcHRpb25Nb2RlbD4oXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgIHVybDogJy9hcGkvYWJwL2FwaS1kZWZpbml0aW9uJyxcclxuICAgICAgICBwYXJhbXM6IHsgaW5jbHVkZVR5cGVzOiBtb2RlbC5pbmNsdWRlVHlwZXMgfSxcclxuICAgICAgfSxcclxuICAgICAgeyBhcGlOYW1lOiB0aGlzLmFwaU5hbWUgfSxcclxuICAgICk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVzdFNlcnZpY2U6IFJlc3RTZXJ2aWNlKSB7fVxyXG59XHJcbiJdfQ==