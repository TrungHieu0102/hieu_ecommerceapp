import { RestService } from '../../../../../../services/rest.service';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../../services/rest.service";
class AbpApplicationLocalizationService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'abp';
        this.get = (input) => this.restService.request({
            method: 'GET',
            url: '/api/abp/application-localization',
            params: { cultureName: input.cultureName, onlyDynamics: input.onlyDynamics },
        }, { apiName: this.apiName });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.6", ngImport: i0, type: AbpApplicationLocalizationService, deps: [{ token: i1.RestService }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.6", ngImport: i0, type: AbpApplicationLocalizationService, providedIn: 'root' }); }
}
export { AbpApplicationLocalizationService };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.6", ngImport: i0, type: AbpApplicationLocalizationService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RestService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJwLWFwcGxpY2F0aW9uLWxvY2FsaXphdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3Byb3h5L3ZvbG8vYWJwL2FzcC1uZXQtY29yZS9tdmMvYXBwbGljYXRpb24tY29uZmlndXJhdGlvbnMvYWJwLWFwcGxpY2F0aW9uLWxvY2FsaXphdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN0RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFFM0MsTUFHYSxpQ0FBaUM7SUFhNUMsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFaNUMsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVoQixRQUFHLEdBQUcsQ0FBQyxLQUF3QyxFQUFFLEVBQUUsQ0FDakQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQ3RCO1lBQ0UsTUFBTSxFQUFFLEtBQUs7WUFDYixHQUFHLEVBQUUsbUNBQW1DO1lBQ3hDLE1BQU0sRUFBRSxFQUFFLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVyxFQUFFLFlBQVksRUFBRSxLQUFLLENBQUMsWUFBWSxFQUFFO1NBQzdFLEVBQ0QsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUMxQixDQUFDO0lBRTJDLENBQUM7OEdBYnJDLGlDQUFpQztrSEFBakMsaUNBQWlDLGNBRmhDLE1BQU07O1NBRVAsaUNBQWlDOzJGQUFqQyxpQ0FBaUM7a0JBSDdDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBBcHBsaWNhdGlvbkxvY2FsaXphdGlvbkR0bywgQXBwbGljYXRpb25Mb2NhbGl6YXRpb25SZXF1ZXN0RHRvIH0gZnJvbSAnLi9tb2RlbHMnO1xyXG5pbXBvcnQgeyBSZXN0U2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL3NlcnZpY2VzL3Jlc3Quc2VydmljZSc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBYnBBcHBsaWNhdGlvbkxvY2FsaXphdGlvblNlcnZpY2Uge1xyXG4gIGFwaU5hbWUgPSAnYWJwJztcclxuXHJcbiAgZ2V0ID0gKGlucHV0OiBBcHBsaWNhdGlvbkxvY2FsaXphdGlvblJlcXVlc3REdG8pID0+XHJcbiAgICB0aGlzLnJlc3RTZXJ2aWNlLnJlcXVlc3Q8YW55LCBBcHBsaWNhdGlvbkxvY2FsaXphdGlvbkR0bz4oXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgIHVybDogJy9hcGkvYWJwL2FwcGxpY2F0aW9uLWxvY2FsaXphdGlvbicsXHJcbiAgICAgICAgcGFyYW1zOiB7IGN1bHR1cmVOYW1lOiBpbnB1dC5jdWx0dXJlTmFtZSwgb25seUR5bmFtaWNzOiBpbnB1dC5vbmx5RHluYW1pY3MgfSxcclxuICAgICAgfSxcclxuICAgICAgeyBhcGlOYW1lOiB0aGlzLmFwaU5hbWUgfSxcclxuICAgICk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVzdFNlcnZpY2U6IFJlc3RTZXJ2aWNlKSB7fVxyXG59XHJcbiJdfQ==